deployment:
  replicas: 2

ingressClass:
  enabled: true
  isDefaultClass: true
  name: ""

ingressRoute:
  dashboard:
    enabled: true
    matchRule: Host(`traefik.unserneuesheim.de`)
    entryPoints: ["websecure"]
    middlewares:
      - name: traefik-default-headers@kubernetescrd
      - name: traefik-dashboard-auth
    tls:
      secretName: unserneuesheim-tls

providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
    ingressClass: "traefik-external"

  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    publishedService:
      enabled: false

logs:
  access:
    enabled: true

globalArguments:
- "--global.checknewversion=true"
- "--global.sendanonymoususage=false"

ports:
  web:
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true

service:
  spec:
    externalTrafficPolicy: Local
    loadBalancerIP: "192.168.0.180"

nodeSelector:
  worker: "true"

extraObjects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: traefik-dashboard-auth-secret
    type: kubernetes.io/basic-auth
    stringData:
      username: admin
      password: changeme
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret
  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: default-headers
    spec:
      headers:
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https