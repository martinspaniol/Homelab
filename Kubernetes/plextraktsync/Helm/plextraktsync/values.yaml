global:
  namespace: "plextraktsync"

  fallbackDefaults:
    pvcSize: 1Gi
    accessModes:
      - ReadWriteMany

resources:
  limits:
    cpu: 0
    memory: 0

podOptions:
  nodeSelector:
    worker: "true"

TZ: "Europe/Berlin"

plextraktsync:
  schedule: "0 * * * *" # run every hour

workload:
  main:
    podSpec:
      # containers:
      #   main:
      #     # args: info
      initContainers:
        init-config:
          enabled: true
          type: init
          imageSelector: alpineImage
          command:
            - /bin/sh
            - -c
            - |
              if [ ! -f /app/config/config.yml ]; then
                echo "Config file not found, copying config from configmap..."
                cp /tmp/config.yml /app/config/config.yml
                echo "Config file copied, you can now edit it at /app/config/config.yml"
              else
                echo "Config file found, you can edit it at /app/config/config.yml"
              fi
              # if [ ! -f /app/config/.env ]; then
              #   echo ".env file not found, copying .env from secret..."
              #   cp /tmp/.env /app/config/.env
              #   echo ".env file copied, you can now edit it at /app/config/.env"
              # else
              #   echo "Config file found, you can edit it at /app/config/.env"
              # fi
              # if [ ! -f /app/config/servers.yml ]; then
              #   echo "servers.yml file not found, copying servers.yml from secret..."
              #   cp /tmp/config.yml /app/config/servers.yml
              #   echo "servers.yml file copied, you can now edit it at /app/config/servers.yml"
              # else
              #   echo "servers.yml file found, you can edit it at /app/config/servers.yml"
              # fi
              # if [ ! -f /app/config/.pytrakt.json ]; then
              #   echo ".pytrakt.json file not found, copying .pytrakt.json from secret..."
              #   cp /tmp/.pytrakt.json /app/config/.pytrakt.json
              #   echo ".pytrakt.json file copied, you can now edit it at /app/config/.pytrakt.json"
              # else
              #   echo ".pytrakt.json file found, you can edit it at /app/config/.pytrakt.json"
              # fi

persistence:
  config:
    enabled: true
    mountPath: /app/config
    targetSelector:
      main:
        # main: 
        #   mountPath: /app/config
        init-config: 
          mountPath: /app/config
      # plextraktsync-cron:
      #   cron: 
      #     mountPath: /app/config
  plextraktsync-configmap-vol:
    enabled: true
    type: configmap
    objectName: plextraktsync-configmap
    items:
      - key: config.yml
        path: config.yml
    targetSelector:
      main:
        init-config:
          subPath: config.yml
          mountPath: /tmp/config.yml

configmap:
  plextraktsync-configmap:
    enabled: true
    data:
      config.yml: |
        cache:
          path: $PTS_CACHE_DIR/trakt_cache

        # You may want to use per server libraries config instead:
        # - https://github.com/Taxel/PlexTraktSync#libraries
        excluded-libraries:
          - Spiele
          - NÃ¤hen

        config:
          dotenv_override: true

        plex:
          timeout: 30

        logging:
          append: false
          # Whether to show timestamps in console messages
          console_time: true
          debug: false
          filename: plextraktsync.log
          # Additional logger names to apply filtering
          filter_loggers:
        #    - plexapi
        #    - requests_cache.backends
        #    - requests_cache.backends.base
        #    - requests_cache.backends.sqlite
        #    - requests_cache.policy.actions
        #    - requests_cache.session
        #    - trakt.core
        #    - urllib3.connectionpool
          filter:
        #    # Filter out all messages with level WARNING
        #    - level: WARNING
        #    # Filter out message with level WARNING and containing a text
        #    - level: WARNING
        #      message: "not found on Trakt"
        #    - message: "because provider local has no external Id"
        #    - message: "because provider none has no external Id"
        #    - message: "Retry using search for specific Plex Episode"
        #    # Filter out messages by requests_cache
        #    - name: requests_cache.backends
        #    - name: requests_cache.backends.base
        #    - name: requests_cache.backends.sqlite
        #    - name: requests_cache.policy.actions
        #    - name: requests_cache.session

        # settings for 'sync' command
        sync:
          # Setting for whether ratings from one platform should have priority.
          # Valid values are trakt, plex or none. (default: plex)
          # none - No rating priority. Existing ratings are not overwritten.
          # trakt - Trakt ratings have priority. Existing Plex ratings are overwritten.
          # plex - Plex ratings have priority. Existing Trakt ratings are overwritten.
          rating_priority: plex

          plex_to_trakt:
            collection: true
            # Clear collected state of items not present in Plex
            clear_collected: false
            ratings: true
            watched_status: true
            # If plex_to_trakt watchlist=false and trakt_to_plex watchlist=true
            # the Plex watchlist will be overwritten by Trakt watchlist
            watchlist: false
          trakt_to_plex:
            liked_lists: true
            ratings: true
            watched_status: true
            # If trakt_to_plex watchlist=false and plex_to_trakt watchlist=true
            # the Trakt watchlist will be overwritten by Plex watchlist
            watchlist: true
            # If you prefer to fetch trakt watchlist as a playlist instead of
            # plex watchlist, toggle this to true (is read only if watchlist=true)
            watchlist_as_playlist: false
            # Sync Play Progress from Trakt to Plex
            playback_status: false

        # Configuration for liked lists
        liked_lists:
          # Whether to keep watched items in the list
          keep_watched: false

        # Configuration override for specific lists
        #liked_list:
        #  "Saw Collection":
        #    keep_watched: true


        # settings for 'watch' command
        watch:
          add_collection: false
          remove_collection: false
          # what video watched percentage (0 to 100) triggers the watched status
          scrobble_threshold: 80
          # true to scrobble only what's watched by you, false for all your PMS users
          username_filter: true
          # Show the progress bar of played media in terminal
          media_progressbar: true
          # Clients to ignore when listening Play events
          ignore_clients: ~

        xbmc-providers:
          movies: imdb
          shows: tvdb

        ##### Advanced settings below this line, don't edit unless you know what you're doing #####
        #http_cache:
        # https://requests-cache.readthedocs.io/en/main/user_guide/expiration.html#url-patterns
        # https://requests-cache.readthedocs.io/en/main/user_guide/expiration.html#expiration-values
        #
        # The value is seconds to cache.
        # Or one of the following special values:
        # - DO_NOT_CACHE: Skip both reading from and writing to the cache
        # - EXPIRE_IMMEDIATELY: Consider the response already expired, but potentially usable
        # - NEVER_EXPIRE: Store responses indefinitely
        #
        # The value can be also suffixed with a time unit:
        # - 5m, 1h, 3d
        # See full documentation at:
        # - https://github.com/wroberts/pytimeparse#pytimeparse-time-expression-parser
        #
        # NOTE: If there is more than one match, the first match will be used in the order they are defined
        #  policy:
        #    "*.trakt.tv/users/me": 1d
        #    "*.trakt.tv/users/likes/lists": DO_NOT_CACHE

        # vim:ts=2:sw=2:et